type _ t = N : string -> 'a t [@@unboxed]

let to_string : type a. a t -> string = fun (N str) -> str

(** Numbers *)

let n0 : [< `basis | `grow | `shrink ] t = N "0"
let n1 : [< `basis | `flex | `order | `grid_cols | `columns ] t = N "1"
let n2 : [< `basis | `order | `grid_cols | `columns ] t = N "2"
let n3 : [< `basis | `order | `grid_cols | `columns ] t = N "3"
let n4 : [< `basis | `order | `grid_cols | `columns ] t = N "4"
let n5 : [< `basis | `order | `grid_cols | `columns ] t = N "5"
let n6 : [< `basis | `order | `grid_cols | `columns ] t = N "6"
let n7 : [< `basis | `order | `grid_cols | `columns ] t = N "7"
let n8 : [< `basis | `order | `grid_cols | `columns ] t = N "8"
let n9 : [< `basis | `order | `grid_cols | `columns ] t = N "9"
let n10 : [< `basis | `order | `grid_cols | `columns ] t = N "10"
let n11 : [< `basis | `order | `grid_cols | `columns ] t = N "11"
let n12 : [< `basis | `order | `grid_cols | `columns ] t = N "12"
let n14 : [< `basis ] t = N "14"
let n16 : [< `basis ] t = N "16"
let n20 : [< `basis ] t = N "20"
let n24 : [< `basis ] t = N "24"
let n28 : [< `basis ] t = N "28"
let n32 : [< `basis ] t = N "32"
let n36 : [< `basis ] t = N "36"
let n40 : [< `basis ] t = N "40"
let n44 : [< `basis ] t = N "44"
let n48 : [< `basis ] t = N "48"
let n50 : [< `color_temperature ] t = N "50"
let n52 : [< `basis ] t = N "52"
let n56 : [< `basis ] t = N "56"
let n60 : [< `basis ] t = N "60"
let n64 : [< `basis ] t = N "64"
let n72 : [< `basis ] t = N "72"
let n80 : [< `basis ] t = N "80"
let n96 : [< `basis ] t = N "96"
let n100 : [< `color_temperature ] t = N "100"
let n200 : [< `color_temperature ] t = N "200"
let n300 : [< `color_temperature ] t = N "300"
let n400 : [< `color_temperature ] t = N "400"
let n500 : [< `color_temperature ] t = N "500"
let n600 : [< `color_temperature ] t = N "600"
let n700 : [< `color_temperature ] t = N "700"
let n800 : [< `color_temperature ] t = N "800"
let n900 : [< `color_temperature ] t = N "900"
let n950 : [< `color_temperature ] t = N "950"

(** Decimals *)

let n0'5 : [< `basis ] t = N "0.5"
let n1'5 : [< `basis ] t = N "1.5"
let n2'5 : [< `basis ] t = N "2.5"
let n3'5 : [< `basis ] t = N "3.5"

(** Fractions *)

let n1_2 : [< `basis ] t = N "1/2"
let n1_3 : [< `basis ] t = N "1/3"
let n2_3 : [< `basis ] t = N "2/3"
let n1_4 : [< `basis ] t = N "1/4"
let n2_4 : [< `basis ] t = N "2/4"
let n3_4 : [< `basis ] t = N "3/4"
let n1_5 : [< `basis ] t = N "1/5"
let n2_5 : [< `basis ] t = N "2/5"
let n3_5 : [< `basis ] t = N "3/5"
let n4_5 : [< `basis ] t = N "4/5"
let n1_6 : [< `basis ] t = N "1/6"
let n2_6 : [< `basis ] t = N "2/6"
let n3_6 : [< `basis ] t = N "3/6"
let n4_6 : [< `basis ] t = N "4/6"
let n5_6 : [< `basis ] t = N "5/6"
