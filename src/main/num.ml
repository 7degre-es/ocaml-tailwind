type _ t = N : string -> 'a t [@@unboxed]

let to_string : type a. a t -> string = fun (N str) -> str

(** Numbers *)

let zero : [< `basis | `grow | `shrink ] t = N "0"
let one : [< `basis | `flex | `order ] t = N "1"
let two : [< `basis | `order ] t = N "2"
let three : [< `basis | `order ] t = N "3"
let four : [< `basis | `order ] t = N "4"
let five : [< `basis | `order ] t = N "5"
let six : [< `basis | `order ] t = N "6"
let seven : [< `basis | `order ] t = N "7"
let eight : [< `basis | `order ] t = N "8"
let nine : [< `basis | `order ] t = N "9"
let ten : [< `basis | `order ] t = N "10"
let eleven : [< `basis | `order ] t = N "11"
let twelve : [< `basis | `order ] t = N "12"
let fourteen : [< `basis ] t = N "14"
let sixteen : [< `basis ] t = N "16"
let twenty : [< `basis ] t = N "20"
let twenty_four : [< `basis ] t = N "24"
let twenty_eight : [< `basis ] t = N "28"
let thirty_two : [< `basis ] t = N "32"
let thirty_six : [< `basis ] t = N "36"
let fourty : [< `basis ] t = N "40"
let fourty_four : [< `basis ] t = N "44"
let fourty_eight : [< `basis ] t = N "48"
let fifty : [< `color_temperature ] t = N "50"
let fifty_two : [< `basis ] t = N "52"
let fifty_six : [< `basis ] t = N "56"
let sixty : [< `basis ] t = N "60"
let sixty_four : [< `basis ] t = N "64"
let seventy_two : [< `basis ] t = N "72"
let eighty : [< `basis ] t = N "80"
let ninety_six : [< `basis ] t = N "96"
let one_hundred : [< `color_temperature ] t = N "100"
let two_hundred : [< `color_temperature ] t = N "200"
let three_hundred : [< `color_temperature ] t = N "300"
let four_hundred : [< `color_temperature ] t = N "400"
let five_hundred : [< `color_temperature ] t = N "500"
let six_hundred : [< `color_temperature ] t = N "600"
let seven_hundred : [< `color_temperature ] t = N "700"
let eight_hundred : [< `color_temperature ] t = N "800"
let nine_hundred : [< `color_temperature ] t = N "900"
let nine_hundred_fifty : [< `color_temperature ] t = N "950"

(** Decimals *)

let point_five : [< `basis ] t = N "0.5"
let one_point_five : [< `basis ] t = N "1.5"
let two_point_five : [< `basis ] t = N "2.5"
let three_point_five : [< `basis ] t = N "3.5"

(** Fractions *)

let one_half : [< `basis ] t = N "1/2"
let one_third : [< `basis ] t = N "1/3"
let two_thirds : [< `basis ] t = N "2/3"
let one_fourth : [< `basis ] t = N "1/4"
let two_fourths : [< `basis ] t = N "2/4"
let three_fourths : [< `basis ] t = N "3/4"
let one_fifth : [< `basis ] t = N "1/5"
let two_fifths : [< `basis ] t = N "2/5"
let three_fifths : [< `basis ] t = N "3/5"
let four_fifths : [< `basis ] t = N "4/5"
let one_sixth : [< `basis ] t = N "1/6"
let two_sixths : [< `basis ] t = N "2/6"
let three_sixths : [< `basis ] t = N "3/6"
let four_sixths : [< `basis ] t = N "4/6"
let five_sixths : [< `basis ] t = N "5/6"
